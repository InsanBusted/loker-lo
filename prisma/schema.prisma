datasource db {
  provider  = "postgres"
  url       = env("AUTH_POSTGRES_PRISMA_URL")
  directUrl = env("AUTH_POSTGRES_URL_NON_POOLING")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

enum Role {
  USER
  ADMIN
}


// USER
model User {
  id        String    @id @default(uuid())
  nama      String
  email     String    @unique
  role      Role      @default(USER)
  // password  String
  biodata   Biodata?
  proposals Proposal[]
  lowongans Lowongan[]  // user bisa upload lowongan
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

enum KategoriEnum {
  mahasiswa
  alumni
  perusahaan
}

model Biodata {
  id              String          @id @default(uuid())
  user            User            @relation(fields: [userId], references: [id])
  userId          String          @unique
  documentUrl     String
  imgProfile      String
  deskripsi       String
  kategori        KategoriEnum
  bidang          Bidang          @relation(fields: [bidangId], references: [id])
  bidangId        Int
  tahunLulus      Int?
  namaPerusahaan  String?
  skills          BiodataSkill[]
}
// SKILL
model Skill {
  id      String          @id @default(uuid())
  slug    String    @unique
  nama    String
  biodata BiodataSkill[]
}

// TABEL PIVOT BIODATA <-> SKILL
model BiodataSkill {
  biodataId String
  skillId   String

  biodata   Biodata @relation(fields: [biodataId], references: [id])
  skill     Skill   @relation(fields: [skillId], references: [id])

  @@id([biodataId, skillId])
}

// LOWONGAN
model Lowongan {
  id             String     @id @default(uuid())
  user           User       @relation(fields: [userId], references: [id]) // siapa yang upload lowongan
  userId         String
  namaPerusahaan String
  deskripsi      String
  bidang          Bidang          @relation(fields: [bidangId], references: [id])
  bidangId        Int
  lokasi         String
  gaji           String
  benefit        String[]
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  proposals      Proposal[]
}

model Bidang {
  id        Int       @id @default(autoincrement())
  slug      String    @unique
  nama      String
  biodata   Biodata[]
  lowongan  Lowongan[]
}

// PROPOSAL
model Proposal {
  id          String   @id @default(uuid())
  user        User     @relation(fields: [userId], references: [id])
  userId      String
  lowongan    Lowongan @relation(fields: [lowonganId], references: [id])
  lowonganId  String
  coverLetter String
  documentUrl String
  pelamar     Pelamar?
  statusProposal StatusProposal?
}

// PELAMAR
model Pelamar {
  id            String          @id @default(uuid())
  status        PelamarStatus
  proposal      Proposal        @relation(fields: [proposalId], references: [id])
  proposalId    String          @unique
}

// STATUS PROPOSAL (status progres proposal)
model StatusProposal {
  id          String    @id @default(uuid())
  proposal    Proposal  @relation(fields: [proposalId], references: [id])
  proposalId  String    @unique
  status      PelamarStatus
}

enum PelamarStatus {
  review
  tolak
  terima
}
